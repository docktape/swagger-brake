(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{305:function(t,e,a){"use strict";a.r(e);var s=a(14),n=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"configuration"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#configuration"}},[t._v("#")]),t._v(" Configuration")]),t._v(" "),e("h2",{attrs:{id:"customizing-reporting"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#customizing-reporting"}},[t._v("#")]),t._v(" Customizing reporting")]),t._v(" "),e("p",[t._v("By default, swagger-brake uses only a console reporter, meaning the check result will be\nsimply printed out to the console. For other use-cases, like when you want to store the\nreport result in Jenkins and show it as an HTML, you can configure the tool to generate\nother types of reports too.")]),t._v(" "),e("p",[t._v("At this moment, the following report types are supported (these are the exact values to be\npassed):")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("STDOUT")]),t._v(" (default)")]),t._v(" "),e("li",[e("code",[t._v("JSON")])]),t._v(" "),e("li",[e("code",[t._v("HTML")])])]),t._v(" "),e("p",[t._v("CLI configuration "),e("RouterLink",{attrs:{to:"/cli/#customizing-reporting"}},[t._v("here")]),t._v(".")],1),t._v(" "),e("p",[t._v("Maven configuration "),e("RouterLink",{attrs:{to:"/maven/#customizing-reporting"}},[t._v("here")]),t._v(".")],1),t._v(" "),e("p",[t._v("Gradle configuration "),e("RouterLink",{attrs:{to:"/gradle/#customizing-reporting"}},[t._v("here")]),t._v(".")],1),t._v(" "),e("p",[t._v("An example JSON report looks the following:")]),t._v(" "),e("div",{staticClass:"language-json extra-class"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"info"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"title"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Example API title"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"description"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"API description"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"version"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1.0.0"')]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"breakingChanges"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"pathDeletedBreakingChange"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"path"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/pet"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"method"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"POST"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"message"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Path /pet POST has been deleted"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  \n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("In case of no breaking changes, the JSON report will be an empty JSON.")]),t._v(" "),e("div",{staticClass:"language-json extra-class"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h2",{attrs:{id:"deprecating-apis"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#deprecating-apis"}},[t._v("#")]),t._v(" Deprecating APIs")]),t._v(" "),e("p",[t._v("As an API evolves and time passes, some APIs might simply become unused and old.\nIn that case, there's no point keeping the API, in fact you rather just get rid of it.\nSince swagger-brake reports an API removal as a breaking change, somehow we need to\nmark these APIs, so it's not going to be considered as a breaking change anymore.")]),t._v(" "),e("p",[t._v("The "),e("a",{attrs:{href:"https://swagger.io/specification/#fixed-fields-8",target:"_blank",rel:"noopener noreferrer"}},[t._v("OpenAPI specification"),e("OutboundLink")],1),t._v("\ndefines the "),e("code",[t._v("deprecated")]),t._v(" attribute for marking an API deprecated,\nso that it's possible to delete a deprecated API without reporting breaking changes.")]),t._v(" "),e("p",[t._v("The default behavior is that deprecated APIs can be deleted without any issue.")]),t._v(" "),e("p",[t._v("However it's possible to override this behavior, so that a deprecated API deletion will also\nbe considered as a breaking change.")]),t._v(" "),e("p",[t._v("CLI configuration "),e("RouterLink",{attrs:{to:"/cli/#deprecating-apis"}},[t._v("here")]),t._v(".")],1),t._v(" "),e("p",[t._v("Maven configuration "),e("RouterLink",{attrs:{to:"/maven/#deprecating-apis"}},[t._v("here")]),t._v(".")],1),t._v(" "),e("p",[t._v("Gradle configuration "),e("RouterLink",{attrs:{to:"/gradle/#deprecating-apis"}},[t._v("here")]),t._v(".")],1),t._v(" "),e("p",[t._v("Example "),e("code",[t._v("swagger1.json")]),t._v(":")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("swagger")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2.0"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("info")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1.0.0"')]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("title")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Swagger Petstore"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("basePath")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/v2"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("paths")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("/pet/findByStatus")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("get")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("deprecated")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("summary")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Finds Pets by status"')]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("operationId")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"findPetsByStatus"')]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("produces")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"application/json"')]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("responses")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("200")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("description")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"successful operation"')]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("/pet/findByTags")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("get")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("summary")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Finds Pets by tags"')]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("operationId")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"findPetsByTags"')]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("produces")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"application/json"')]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("responses")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("200")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("description")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"successful operation"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("definitions")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Pet")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"object"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("properties")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"integer"')]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("format")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"int64"')]),t._v("\n")])])]),e("p",[t._v("Example "),e("code",[t._v("swagger2.json")]),t._v(":")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("swagger")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2.0"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("info")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1.0.0"')]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("title")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Swagger Petstore"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("basePath")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/v2"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("paths")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("/pet/findByTags")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("get")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("summary")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Finds Pets by tags"')]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("operationId")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"findPetsByTags"')]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("produces")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"application/json"')]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("responses")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("200")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("description")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"successful operation"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("definitions")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Pet")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"object"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("properties")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"integer"')]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("format")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"int64"')]),t._v("\n")])])]),e("p",[t._v("Note that "),e("code",[t._v("/pet/findByStatus")]),t._v(" API has been marked as deprecated in "),e("code",[t._v("swagger1.json")]),t._v(" and "),e("code",[t._v("swagger2.json")]),t._v(" doesn't contain\nthe API anymore.")]),t._v(" "),e("h2",{attrs:{id:"latest-maven-artifact-resolution"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#latest-maven-artifact-resolution"}},[t._v("#")]),t._v(" Latest Maven artifact resolution")]),t._v(" "),e("p",[t._v("For easier CI integration, there is a possibility not to provide the old API path directly\nbut to resolve it from an artifact containing the Swagger definition file from any Maven2\nrepository (including Nexus and Artifactory as well). This feature requires that\nthe API definition file has been packed into a JAR.")]),t._v(" "),e("p",[t._v('The feature is especially useful when it comes to Maven and Gradle plugin integration. In that case within a build\nprocess, often only the "new" API is available and the old one is stored elsewhere, like in an older version of\nthe same artifact.')]),t._v(" "),e("p",[t._v("Let's say you want to make sure your API is always backward compatible. You can simply create a Maven artifact from the\nSwagger definition and just release it as any other artifact with a proper versioning scheme (i.e. using release\nand snapshot versions). When the release process is nailed down, you can configure swagger-brake to use your\nartifact repository and pass the artifact information required for the artifact resolution.")]),t._v(" "),e("p",[t._v("The resolution always tries to find the latest version of your artifact, depending on if it's a release or a snapshot\nversion. The resolution is based on the "),e("code",[t._v("maven-metadata.xml")]),t._v(" file available in the Maven repository when an\nartifact gets uploaded. As soon as the resolved JAR artifact is found, it will be downloaded to the system's\ntemporary directory for further scanning.")]),t._v(" "),e("p",[t._v("Since Nexus, Artifactory and other artifact repositories can have authentication in place for access-control,\nswagger-brake has configuration parameters to provide username and password data to access the repository.")]),t._v(" "),e("p",[t._v("By default, swagger-brake scans the downloaded artifact for one of the following 3 files:")]),t._v(" "),e("ul",[e("li",[t._v("swagger.json")]),t._v(" "),e("li",[t._v("swagger.yaml")]),t._v(" "),e("li",[t._v("swagger.yml")])]),t._v(" "),e("p",[t._v("If needed, you can override the filename to look for. This is described on the sections of the various interfaces.")]),t._v(" "),e("p",[t._v("CLI configuration "),e("RouterLink",{attrs:{to:"/cli/#latest-maven-artifact-resolution"}},[t._v("here")]),t._v(".")],1),t._v(" "),e("p",[t._v("Maven configuration "),e("RouterLink",{attrs:{to:"/maven/#latest-maven-artifact-resolution"}},[t._v("here")]),t._v(".")],1),t._v(" "),e("p",[t._v("Gradle configuration "),e("RouterLink",{attrs:{to:"/gradle/#latest-maven-artifact-resolution"}},[t._v("here")]),t._v(".")],1),t._v(" "),e("h2",{attrs:{id:"beta-api-support"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#beta-api-support"}},[t._v("#")]),t._v(" Beta API support")]),t._v(" "),e("p",[t._v("There might be a need to work with beta APIs. In those use-cases you might want to release a version of your API\nto receive quick feedback from the clients. Usually it means incremental changes, knowing the fact that\nthey might not be backward compatible but this is acceptable.")]),t._v(" "),e("p",[t._v("Swagger Brake provides a way to mark APIs beta, in this case those API operation changes are not going to be\nconsidered as breaking and will be ignored.")]),t._v(" "),e("p",[t._v("The following table shows the rules:")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"center"}},[t._v("Use-case")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("Old API operation")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("New API operation")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("Breaking change?")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("Beta API created")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("Does not exist")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("Exists as beta")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("No")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("Beta API modified")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("Exists as beta")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("Exists as beta and modified")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("No")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("Beta API is not beta anymore")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("Exists as beta")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("Exists as non-beta (flag removed)")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("No")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("Beta API removed")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("Exists as beta")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("Does not exists")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("No")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("Standard API marked as beta")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("Exists as non-beta")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("Exists as beta")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("Yes")])])])]),t._v(" "),e("p",[t._v("A beta API can be marked with the "),e("code",[t._v("x-beta-api")]),t._v(" vendor extension in the specification file on\noperation level. It can have a boolean value only.")]),t._v(" "),e("p",[t._v("Example snippet:")]),t._v(" "),e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('...\npaths:\n  /pet:\n    post:\n      operationId: "addPet"\n      x-beta-api: true\n...\n')])])]),e("p",[t._v("As of today, there is no standard way of denoting an API beta in the OpenAPI specification yet. Due to this\nthere might be a need in different projects to use various vendor extension attribute names\nto mark APIs beta.")]),t._v(" "),e("p",[t._v("There is a customization option available that you can utilize for these cases.")]),t._v(" "),e("p",[t._v("CLI configuration "),e("RouterLink",{attrs:{to:"/cli/#beta-api-support"}},[t._v("here")]),t._v(".")],1),t._v(" "),e("p",[t._v("Maven configuration "),e("RouterLink",{attrs:{to:"/maven/#beta-api-support"}},[t._v("here")]),t._v(".")],1),t._v(" "),e("p",[t._v("Gradle configuration "),e("RouterLink",{attrs:{to:"/gradle/#beta-api-support"}},[t._v("here")]),t._v(".")],1),t._v(" "),e("h2",{attrs:{id:"excluding-paths-from-the-scan"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#excluding-paths-from-the-scan"}},[t._v("#")]),t._v(" Excluding paths from the scan")]),t._v(" "),e("p",[t._v("There might be a need to exclude specific APIs from the scan completely.")]),t._v(" "),e("p",[t._v("The exclusion works based on prefix-matching, so in case you'd like to exclude all paths that\nstarts with "),e("code",[t._v("/auth")]),t._v(" for example, you can pass it as a parameter.")]),t._v(" "),e("p",[t._v("CLI configuration "),e("RouterLink",{attrs:{to:"/cli/#excluding-paths-from-the-scan"}},[t._v("here")]),t._v(".")],1),t._v(" "),e("p",[t._v("Maven configuration "),e("RouterLink",{attrs:{to:"/maven/#excluding-paths-from-the-scan"}},[t._v("here")]),t._v(".")],1),t._v(" "),e("p",[t._v("Gradle configuration "),e("RouterLink",{attrs:{to:"/gradle/#excluding-paths-from-the-scan"}},[t._v("here")]),t._v(".")],1),t._v(" "),e("h2",{attrs:{id:"ignoring-specific-breaking-changes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ignoring-specific-breaking-changes"}},[t._v("#")]),t._v(" Ignoring specific breaking changes")]),t._v(" "),e("p",[t._v("In case you don't want a specific rule to be considered as a breaking change for your API, you can disable them.")]),t._v(" "),e("p",[t._v("CLI configuration "),e("RouterLink",{attrs:{to:"/cli/#ignoring-specific-breaking-changes"}},[t._v("here")]),t._v(".")],1),t._v(" "),e("p",[t._v("Maven configuration "),e("RouterLink",{attrs:{to:"/maven/#ignoring-specific-breaking-changes"}},[t._v("here")]),t._v(".")],1),t._v(" "),e("p",[t._v("Gradle configuration "),e("RouterLink",{attrs:{to:"/gradle/#ignoring-specific-breaking-changes"}},[t._v("here")]),t._v(".")],1)])}),[],!1,null,null,null);e.default=n.exports}}]);