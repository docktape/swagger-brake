(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{309:function(e,a,t){"use strict";t.r(a);var s=t(14),r=Object(s.a)({},(function(){var e=this,a=e._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"introduction"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[e._v("#")]),e._v(" Introduction")]),e._v(" "),a("p",[e._v("Nowadays when the most common communication protocol is HTTP and everybody is developing APIs,\nthere's often a need to have these APIs backward compatible, so the existing functionality is\nnot going to be broken.")]),e._v(" "),a("p",[a("strong",[e._v("swagger-brake")]),e._v(" tries to address this. It's a simple tool to verify whether the new version of\nyour API will break the existing one. The idea behind is to compare 2 Swagger API descriptors\nwith each other and report if the changes made between the 2 API states are not backward\ncompatible.")]),e._v(" "),a("h2",{attrs:{id:"quickstart"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#quickstart"}},[e._v("#")]),e._v(" Quickstart")]),e._v(" "),a("p",[e._v("swagger-brakes comes with different types of integration patterns. For generic use-cases, the\nCLI interface is recommended and can be used by any ecosystem.")]),e._v(" "),a("p",[e._v("First of all, just use the latest version of the client, you can download it from\n"),a("a",{attrs:{href:"https://github.com/docktape/swagger-brake/releases",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("p",[e._v("Then as an example, "),a("a",{attrs:{href:"https://petstore.swagger.io/v2/swagger.json",target:"_blank",rel:"noopener noreferrer"}},[e._v("download the Petstore Swagger descriptor"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("p",[e._v("And now you can execute swagger-brake passing the location of the Swagger descriptors as an argument.\nNote that now swagger-brake is going to check the same API against each other,\nso it's expected to not have any breaking changes reported.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("java")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-jar")]),e._v(" swagger-brake.jar --old-api"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("swagger.json --new-api"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("swagger.json\nLoading old API from swagger.json\nLoading new API from swagger.json\nSuccessfully loaded APIs\nStarting the check "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("for")]),e._v(" breaking API changes\nCheck is finished\nNo breaking API changes detected\n")])])]),a("p",[e._v("As soon as you modify the Swagger descriptor (the new one) and let's say you remove an API\ncompletely, this will be the result.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("java")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-jar")]),e._v(" swagger-brake.jar --old-api"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("swagger.json --new-api"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("swagger2.json\nLoading old API from swagger.json\nLoading new API from swagger2.json\nSuccessfully loaded APIs\nStarting the check "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("for")]),e._v(" breaking API changes\nCheck is finished\nThere were breaking API changes\nPath /pet POST has been deleted\n")])])]),a("p",[e._v("More details on the command-line interface can be found "),a("RouterLink",{attrs:{to:"/cli/"}},[e._v("here")]),e._v(".")],1)])}),[],!1,null,null,null);a.default=r.exports}}]);