buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven {
            name = 'Central Portal Snapshots'
            url = 'https://central.sonatype.com/repository/maven-snapshots/'
        }
    }
    dependencies {
        classpath("io.swagger:swagger-codegen:2.4.28")
        classpath "com.docktape:swagger-brake-gradle:${swaggerBrakeVersion}"
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:5.1.10"
    }
}

group = 'com.docktape.example'
version = '<VERSION_PLACEHOLDER>'

apply plugin: 'java'
apply plugin: "maven-publish"
apply plugin: "com.jfrog.artifactory"
apply plugin: "com.docktape.swagger-brake"

sourceCompatibility = 21
targetCompatibility = 21

repositories {
    mavenCentral()
    maven {
        name = 'Central Portal Snapshots'
        url = 'https://central.sonatype.com/repository/maven-snapshots/'
    }
}
import io.swagger.codegen.DefaultGenerator
import io.swagger.codegen.config.CodegenConfigurator

ext.artifactoryContextUrl       = "${artifactoryContextUrl}"
ext.artifactoryRepoKey          = "${artifactoryRepoKey}"
ext.artifactoryRepoUrl          = "${artifactoryRepoUrl}"
ext.artifactorySnapshotRepoKey  = "${artifactorySnapshotRepoKey}"
ext.artifactorySnapshotRepoUrl  = "${artifactorySnapshotRepoUrl}"
ext.artifactoryUsername         = "${artifactoryUsername}"
ext.artifactoryPassword         = "${artifactoryPassword}"
ext.isSnapshotVersion           = "${customVersion}".endsWith("-SNAPSHOT")
ext.packaging                   = "${packaging}"


if (packaging.equalsIgnoreCase("war")) {
    apply plugin: 'war'
    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.web
            }
        }
    }
} else {
    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
            }
        }
    }
}

swaggerBrake {
    mavenRepoUrl = artifactoryRepoUrl
    mavenSnapshotRepoUrl = artifactorySnapshotRepoUrl
    mavenRepoUsername = artifactoryUsername
    mavenRepoPassword = artifactoryPassword
    newApi = "${project.buildDir}/resources/main/swagger.yaml"
    outputFormats = ["HTML", "JSON"]
}

artifactory {
    publish {
        contextUrl = artifactoryContextUrl
        publishBuildInfo = true
        repository {
            repoKey  = isSnapshotVersion ? artifactorySnapshotRepoKey : artifactoryRepoKey
            username = artifactoryUsername
            password = artifactoryPassword
        }
        defaults {
            publications ('mavenJava')
            publishArtifacts = true
            publishPom = true
        }
    }
    clientConfig.info.setBuildNumber('' + new java.util.Random(System.currentTimeMillis()).nextInt(20000))
    clientConfig.timeout = 600
}

task generateApi {
    doLast {
        def config = new CodegenConfigurator()
        config.setLang("swagger")
        config.setInputSpec("${project.rootDir}/src/main/resources/swagger.yaml")
        config.setOutputDir(project.buildDir.toString())
        new DefaultGenerator().opts(config.toClientOptInput()).generate()
    }
}

compileJava.dependsOn('generateApi')