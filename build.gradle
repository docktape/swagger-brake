group 'io.redskap'
version '2.6.0-SNAPSHOT'

buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.github.spotbugs.snom:spotbugs-gradle-plugin:6.4.2"
    }
}

repositories {
    mavenCentral()
}

def isReleaseBuild() {
    return version.contains("SNAPSHOT") == false
}


subprojects {
    group = rootProject.group
    version = rootProject.version

    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'checkstyle'
    apply plugin: 'com.github.spotbugs'

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(17)
        }
    }

    dependencies {
        compileOnly "com.github.spotbugs:spotbugs-annotations:${spotbugs.toolVersion.get()}"
        testCompileOnly "com.github.spotbugs:spotbugs-annotations:${spotbugs.toolVersion.get()}"

        compileOnly "org.projectlombok:lombok:1.18.42"
        annotationProcessor "org.projectlombok:lombok:1.18.42"

        implementation 'com.google.guava:guava:33.5.0-jre'
        implementation "org.apache.commons:commons-collections4:4.5.0"
        implementation "org.apache.commons:commons-lang3:3.19.0"
        implementation "org.springframework:spring-context:6.2.11"
        implementation "org.springframework:spring-context:6.2.11"
        implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.13.4"

        testImplementation "org.assertj:assertj-core:3.27.6"
        testImplementation "org.springframework:spring-test:6.2.11"
        testImplementation "org.mockito:mockito-core:5.20.0"
        testImplementation "org.mockito:mockito-junit-jupiter:5.20.0"
    }

    tasks.named('test') {
        useJUnitPlatform()

        testLogging {
            events("failed", "passed")
            exceptionFormat = "full"
        }
    }

    checkstyle {
        toolVersion = '11.1.0'
    }

    tasks.withType(Checkstyle) {
        reports {
            xml.required = false
            html.required = true
        }
    }

    spotbugs {
        reportLevel = com.github.spotbugs.snom.Confidence.valueOf("HIGH")
        showProgress = false
    }

    //<editor-fold desc="Uploading to central">
    apply plugin: 'signing'

    task javadocJar(type: Jar) {
        archiveClassifier = 'javadoc'
        from javadoc
    }

    task sourcesJar(type: Jar) {
        archiveClassifier = 'sources'
        from sourceSets.main.allSource
    }

    if (project.hasProperty('ossrhUsername') && project.hasProperty('ossrhPassword')) {
        publishing {
            publications {
                mavenJava(MavenPublication) {
                    groupId = project.group
                    artifactId = project.name
                    version = project.version

                    from components.java
                    artifact javadocJar
                    artifact sourcesJar

                    pom {
                        name = 'Swagger Brake'
                        packaging = 'jar'
                        description = 'Swagger contract checker for breaking API changes'
                        url = 'https://github.com/redskap/swagger-brake'

                        scm {
                            connection = 'scm:git:git://github.com/redskap/swagger-brake.git'
                            developerConnection = 'scm:git:ssh://github.com:redskap/swagger-brake.git'
                            url = 'https://github.com/redskap/swagger-brake'
                        }

                        licenses {
                            license {
                                name = 'The Apache License, Version 2.0'
                                url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                            }
                        }

                        developers {
                            developer {
                                id = 'galovics'
                                name = 'Arnold Galovics'
                                email = 'info@arnoldgalovics.com'
                            }
                        }
                        scm {
                            connection = 'scm:git:git://github.com/redskap/swagger-brake.git'
                            developerConnection = 'scm:git:ssh://github.com:redskap/swagger-brake.git'
                            url = 'https://github.com/redskap/swagger-brake'
                        }
                    }
                }
            }
            repositories {
                maven {
                    url = isReleaseBuild() ? 'https://ossrh-staging-api.central.sonatype.com/service/local/staging/deploy/maven2/' : 'https://central.sonatype.com/repository/maven-snapshots/'

                    credentials {
                        username = ossrhUsername
                        password = ossrhPassword
                    }
                }
            }
        }
    }

    if (project.hasProperty('signing.keyId')) {
        signing {
            sign publishing.publications.mavenJava
        }
    }
    //</editor-fold>
}

