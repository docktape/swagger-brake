group 'com.docktape'
version '2.7.0-SNAPSHOT'

buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.github.spotbugs.snom:spotbugs-gradle-plugin:6.4.3"
        classpath "org.jreleaser:org.jreleaser.gradle.plugin:1.20.0"
    }
}
apply plugin: 'base'
apply plugin: 'org.jreleaser'

repositories {
    mavenCentral()
}

subprojects {
    group = rootProject.group
    version = rootProject.version

    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'checkstyle'
    apply plugin: 'com.github.spotbugs'

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(21)
        }
    }

    dependencies {
        compileOnly "com.github.spotbugs:spotbugs-annotations:${spotbugs.toolVersion.get()}"
        testCompileOnly "com.github.spotbugs:spotbugs-annotations:${spotbugs.toolVersion.get()}"

        compileOnly "org.projectlombok:lombok:1.18.42"
        annotationProcessor "org.projectlombok:lombok:1.18.42"

        implementation 'io.projectreactor:reactor-core:3.7.12'

        implementation 'com.google.guava:guava:33.5.0-jre'
        implementation "org.apache.commons:commons-collections4:4.5.0"
        implementation "org.apache.commons:commons-lang3:3.19.0"
        implementation "org.springframework:spring-context:6.2.12"
        implementation "org.springframework:spring-context:6.2.12"
        implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.19.2"

        testImplementation "org.assertj:assertj-core:3.27.6"
        testImplementation "org.springframework:spring-test:6.2.12"
        testImplementation "org.mockito:mockito-core:5.20.0"
        testImplementation "org.mockito:mockito-junit-jupiter:5.20.0"
    }

    tasks.named('test') {
        useJUnitPlatform()

        testLogging {
            events("failed", "passed")
            exceptionFormat = "full"
        }
    }

    checkstyle {
        toolVersion = '12.0.1'
    }

    tasks.withType(Checkstyle) {
        reports {
            xml.required = false
            html.required = true
        }
    }

    spotbugs {
        reportLevel = com.github.spotbugs.snom.Confidence.valueOf("HIGH")
        showProgress = false
    }

    //<editor-fold desc="Uploading to central">
    apply plugin: 'signing'

    task javadocJar(type: Jar) {
        archiveClassifier = 'javadoc'
        from javadoc
    }

    task sourcesJar(type: Jar) {
        archiveClassifier = 'sources'
        from sourceSets.main.allSource
    }

    def skipPublishingProjects = ['swagger-brake-integration-tests']

    if (!skipPublishingProjects.contains(project.name)) {
        publishing {
            publications {
                mavenJava(MavenPublication) {
                    groupId = project.group
                    artifactId = project.name
                    version = project.version

                    from components.java
                    artifact javadocJar
                    artifact sourcesJar

                    pom {
                        name = 'Swagger Brake'
                        packaging = 'jar'
                        description = 'Swagger contract checker for breaking API changes'
                        url = 'https://github.com/docktape/swagger-brake'

                        scm {
                            connection = 'scm:git:git://github.com/docktape/swagger-brake.git'
                            developerConnection = 'scm:git:ssh://github.com:docktape/swagger-brake.git'
                            url = 'https://github.com/docktape/swagger-brake'
                        }

                        licenses {
                            license {
                                name = 'The Apache License, Version 2.0'
                                url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                            }
                        }

                        developers {
                            developer {
                                id = 'galovics'
                                name = 'Arnold Galovics'
                                email = 'info@arnoldgalovics.com'
                            }
                        }
                        scm {
                            connection = 'scm:git:git://github.com/docktape/swagger-brake.git'
                            developerConnection = 'scm:git:ssh://github.com:docktape/swagger-brake.git'
                            url = 'https://github.com/docktape/swagger-brake'
                        }
                    }
                }
            }
            repositories {
                maven {
                    url = rootProject.layout.buildDirectory.dir('staging-deploy')
                }
            }
        }
    }

    //</editor-fold>
}


jreleaser {
    gitRootSearch = true

    project {
        name = 'swagger-brake'
        description = 'Swagger contract checker for breaking API changes'
        website = 'https://github.com/docktape/swagger-brake'
        authors = ['Arnold Galovics']
        license = 'Apache-2.0'
        inceptionYear = '2018'

        links {
            homepage = 'https://github.com/docktape/swagger-brake'
        }
    }

    release {
        github {
            repoOwner = 'docktape'
            name = 'swagger-brake'
            overwrite = true
            changelog {
                formatted = 'ALWAYS'
            }
        }
    }

    signing {
        active = 'ALWAYS'
        armored = true

        mode = 'FILE'
    }
    deploy {
        maven {
            mavenCentral {
                'releaseDeploy' {
                    active = 'RELEASE'
                    url = 'https://central.sonatype.com/api/v1/publisher'
                    stagingRepository("build/staging-deploy")
                }
            }
            nexus2 {
                'snapshotDeploy' {
                    active = 'SNAPSHOT'
                    snapshotUrl = 'https://central.sonatype.com/repository/maven-snapshots/'
                    applyMavenCentralRules = true
                    snapshotSupported = true
                    closeRepository = true
                    releaseRepository = true
                    stagingRepository('build/staging-deploy')
                }
            }
        }
    }

    distributions {
        swaggerbrake {
            artifact {
                path = rootProject.rootDir.absolutePath + "/swagger-brake/build/libs/swagger-brake-{{projectVersion}}.jar"
            }
        }
        swaggerbrakecli {
            artifact {
                path = rootProject.rootDir.absolutePath + "/swagger-brake-cli/build/libs/swagger-brake-{{projectVersion}}-cli.jar"
            }
        }
    }
}